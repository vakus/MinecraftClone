#include "block.hpp"

void block::initialise(std::vector<block> BLOCKS)
{
    //BLOCKS.resize(2);
    //dirt

    BLOCKS.push_back(block{{
                          //top
                          {{-0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{-0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},

                          //front
                          {{-0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{-0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
                          {{0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},

                          //back
                          {{-0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{-0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},
                          {{0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},

                          //left
                          {{0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
                          {{0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},

                          //right
                          {{-0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{-0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
                          {{-0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
                          {{-0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},

                          //bottom
                          {{-0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
                          {{0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
                          {{0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},
                          {{-0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}} //
                      },
                      {
                          0, 1, 2, 2, 3, 0,       //top
                          4, 5, 7, 7, 6, 4,       //front
                          8, 9, 11, 11, 10, 8,    //back
                          12, 13, 14, 14, 15, 13, //left
                          16, 17, 18, 18, 19, 17, //right
                          20, 21, 22, 22, 23, 20  //bottom
                      },
                      1});
    /*
    BLOCKS[0]
        .id = 1;
    BLOCKS[0].verticies = {
        //top
        {{-0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},

        //front
        {{-0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},

        //back
        {{-0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},

        //left
        {{0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},

        //right
        {{-0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},

        //bottom
        {{-0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}} //
    };
    BLOCKS[0].indicies = {
        0, 1, 2, 2, 3, 0,       //top
        4, 5, 7, 7, 6, 4,       //front
        8, 9, 11, 11, 10, 8,    //back
        12, 13, 14, 14, 15, 13, //left
        16, 17, 18, 18, 19, 17, //right
        20, 21, 22, 22, 23, 20  //bottom
    };

    //stone
    BLOCKS[1].id = 2;
    BLOCKS[1].verticies = {
        //top
        {{-0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},

        //front
        {{-0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},

        //back
        {{-0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},

        //left
        {{0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},

        //right
        {{-0.5f, -0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, 0.5f}, {0.0f, 0.0f}},
        {{-0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},

        //bottom
        {{-0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, -0.5f, -0.5f}, {0.0f, 0.0f}},
        {{0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}},
        {{-0.5f, 0.5f, -0.5f}, {0.0f, 0.0f}} //
    };*/
}

glm::vec2 getTextureCoord(uint x, uint y, TextureCoordType textureCoordType)
{

    if (textureCoordType == TextureCoordType::TOP_RIGHT)
    {
        x++;
    }
    else if (textureCoordType == TextureCoordType::BOTTOM_LEFT)
    {
        y++;
    }
    else if (textureCoordType == TextureCoordType::BOTTOM_RIGHT)
    {
        y++;
        x++;
    }

    float baseX = x / 10.0f;
    float baseY = y / 10.0f;

    return glm::vec2(baseX, baseY);
}